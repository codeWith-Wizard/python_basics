+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Feature**               | **Explanation**                                                                                      | **Example**                                               | **Result**                    |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Initialization** | Strings can be initialized using single, double, or triple quotes.                                   | s1 = 'Hello' <br> s2 = "Hello" <br> s3 = '''Hello'''        | 'Hello'                       |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Immutability**          | Strings cannot be modified after creation; operations create new strings.                            | s = 'Hello' <br> s[0] = 'h' <br> s = 'h' + s[1:]            | Error <br> 'hello'            |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Concatenation**         | Combines two or more strings.                                                                        | 'Hello' + ' World'                                        | 'Hello World'                 |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Repetition**            | Repeats a string multiple times.                                                                     | 'Ha' * 3                                                  | 'HaHaHa'                      |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Indexing**              | Accesses characters by position. Positive from start, negative from end.                             | s = 'Python' <br> s[0] <br> s[-1]                          | 'P' <br> 'n'                  |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Slicing**               | Extracts substrings using [start:end:step]. Defaults: start=0, end=len, step=1.                      | s = 'Python' <br> s[1:4] <br> s[::2]                       | 'yth' <br> 'Pto'              |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Length**         | Returns the number of characters in a string.                                                        | len('Python')                                             | 6                             |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Methods**        | Built-in functions for string manipulation (e.g., .upper(), .lower()).                              | 'python'.upper() <br> 'Python'.lower()                      | 'PYTHON' <br> 'python'        |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Escape Sequences**      | Special characters using a backslash, like newline \n, tab \t.                                        | 'First Line\nSecond Line'                                 | First Line <br> Second Line  |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Formatting**     | Embeds values in strings using %, .format(), or f-strings.                                           | "Hello %s" % 'World' <br> 'Hello {}'.format('World') <br> f'Hello {name}' | 'Hello World' <br> 'Hello World' |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Multiline Strings**     | Strings that span multiple lines, often using triple quotes.                                         | s = '''Line 1\nLine 2'''                                  | Line 1 <br> Line 2           |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Membership Testing**    | Checks if a substring is in a string using in and not in.                                            | 'Py' in 'Python' <br> 'Java' not in 'Python'               | True <br> True                |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Case Conversion**       | Converts the case of strings: .upper(), .lower(), .capitalize(), etc.                               | 'python'.capitalize() <br> 'PYTHON'.lower() <br> 'python'.title() | 'Python' <br> 'python' <br> 'Python' |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Whitespace Removal**    | Removes leading/trailing whitespace using .strip(), .lstrip(), .rstrip().                           | '  Hello  '.strip() <br> '  Hello  '.lstrip() <br> '  Hello  '.rstrip() | 'Hello' <br> 'Hello  ' <br> '  Hello' |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Iteration**      | Iterates over each character in a string using a for loop.                                           | for char in 'Python': print(char)                          | Prints each character on a new line |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Comparison**     | Compares strings lexicographically using ==, !=, <, >, <=, >=.                                      | 'abc' < 'bcd' <br> 'abc' == 'abc'                          | True <br> True                |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Splitting**      | Splits a string into a list using .split() based on a delimiter (default: whitespace).               | 'Hello World'.split() <br> 'a,b,c'.split(',')              | ['Hello', 'World'] <br> ['a', 'b', 'c'] |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Joining**        | Joins elements of a list into a string using .join().                                                 | ','.join(['a', 'b', 'c']) <br> ' '.join(['Hello', 'World']) | 'a,b,c' <br> 'Hello World'   |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Substring Counting**    | Counts the occurrences of a substring with .count().                                                 | 'banana'.count('a')                                       | 3                             |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Replacement**    | Replaces parts of a string using .replace().                                                           | 'Hello World'.replace('World', 'Python')                   | 'Hello Python'                |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Starts/Ends**    | Checks if a string starts or ends with a specific substring using .startswith(), .endswith().         | 'Python'.startswith('Py') <br> 'Python'.endswith('on')      | True <br> True                |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Reversal**       | Reverses a string using slicing.                                                                       | 'Python'[::-1]                                            | 'nohtyP'                      |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Conversion**     | Converts other data types to strings using str().                                                      | str(123) <br> str(45.67) <br> str(True)                     | '123' <br> '45.67' <br> 'True'|
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Raw Strings**           | Prevents escape sequences from being interpreted by prefixing the string with r.                      | r'C:\new\test'                                          | 'C:\\new\\test'               |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Encoding/Decoding** | Encodes a string into bytes using .encode(), and decodes bytes back into a string using .decode(). | 'Python'.encode('utf-8') <br> b'Python'.decode('utf-8')    | b'Python' <br> 'Python'      |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Padding**        | Pads a string to a specified width using .rjust(), .ljust(), .center().                               | 'Hello'.rjust(10) <br> 'Hello'.ljust(10) <br> 'Hello'.center(10) | '     Hello' <br> 'Hello     ' <br> '  Hello  '|
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Find Substring**        | Finds the first occurrence of a substring using .find() and last occurrence using .rfind().            | 'Hello'.find('l') <br> 'Hello'.rfind('l')                   | 2 <br> 3                      |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **Casefolding**           | Converts string to lowercase, but more aggressive for certain characters using .casefold().           | 'PYTHON'.casefold()                                      | 'python'                      |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Expansion**      | Expands tabs in a string using .expandtabs().                                                           | 'Hello\tWorld'.expandtabs(4)                              | 'Hello   World'               |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Partitioning**   | Splits the string into a tuple of three elements (before, separator, after) using .partition().         | 'Hello World'.partition(' ')                              | ('Hello', ' ', 'World')       |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
| **String Translation**    | Maps characters from one string to another using .translate() along with str.maketrans().               | s = 'abc'.translate(str.maketrans('a', '1'))               | '1bc'                         |
+---------------------------+------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+-------------------------------+
